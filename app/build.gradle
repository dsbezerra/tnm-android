apply plugin: 'com.android.application'

apply plugin: 'com.apollographql.android'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def tnmVersionCode = 27
def tnmVersionName = '2.05.01'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    sourceSets.main {
        jniLibs.srcDir 'src/main/jniLibs'
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi', 'armeabi-v7a', 'mips'
            universalApk false
        }
    }
    defaultConfig {
        applicationId "com.tnmlicitacoes.app"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode tnmVersionCode
        versionName tnmVersionName
        multiDexEnabled true
        generatedDensities = []
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }
}

ext.versionCodes = [armeabi:1, 'armeabi-v7a':2, mips:3, x86:4]

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 1000000 + android.defaultConfig.versionCode
    }
}

configurations {
    cleanedAnnotations
    compile.exclude group: 'org.jetbrains' , module:'annotations'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile "com.andkulikov:transitionseverywhere:1.7.3"
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.1.0'

    compile "com.google.firebase:firebase-messaging:$fbVersion"
    compile "com.google.firebase:firebase-core:$fbVersion"

    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:preference-v7:$supportVersion"
    compile "com.android.support:preference-v14:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"

    compile 'com.apollographql.apollo:apollo-android-support:0.3.0'
    compile 'com.apollographql.apollo:apollo-runtime:0.3.0'

    compile 'com.cocosw:bottomsheet:1.+@aar'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.google.code.gson:gson:2.5'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:answers:1.3.6@aar') {
        transitive = true;
    }
    compile('com.mikepenz:materialdrawer:5.0.8@aar') {
        transitive = true
    }
}

task cleanAnnotationsJar(type:Jar) {
    configurations.cleanedAnnotations.each { f ->
        from zipTree(f)
    }
    archiveName = "annotations-cleaned.jar"
    exclude 'org/jetbrains/annotations/NotNull.class'
    exclude 'org/jetbrains/annotations/Nullable.class'
}

apply plugin: 'com.google.gms.google-services'